import type { Metadata } from "next";
import { Rubik } from "next/font/google";
import "./globals.css";
import Header from "./_components/header";
import { ThemeProvider } from "./_components/theme-provider";
import { Quiz, QuizStateProvider } from "./_components/quiz-state-provider";
import {promises as fs} from 'fs';

const rubik = Rubik({
  variable: "--font-rubik",
  subsets: ["latin"]
})

const colorVariants = [
    'bg-orange-50',
     'bg-green-50',
    'bg-blue-50',
    'bg-purple-50',
];

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};
const getData = async () => {
  const file = await fs.readFile(process.cwd() + '/src/app/data.json', 'utf-8');
  const data = JSON.parse(file);
  const quizzes: Quiz[] = data.quizzes;
  return quizzes.map((quiz, index) => ({...quiz, color: colorVariants[index]}));
}

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const quizzes: Quiz[] = await getData();
  console.log(quizzes);
  return (
    <html lang="en" className={rubik.className} suppressHydrationWarning>
      <body>
      <ThemeProvider attribute="class" defaultTheme="light" enableSystem>
        
          <QuizStateProvider value={{quizzes, correctAnswers: 0}}>
            <Header />
            {children}
          </QuizStateProvider>
        
      </ThemeProvider>
      </body>
    </html>
  );
}
